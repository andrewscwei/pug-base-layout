//- Â© Andrew Wei
//-
  This is a extensible Pug layout. There are some blocks you can inherit/extend 
  to customize the layout to your needs.

  block config  - This block defines all config properties. Append to it in your
                  derived layout to override certain properties.
  block vars    - Override this block to add your own local variables.
  block meta    - Override this block to add more meta tags to the <head> tag.
  block styles  - Override this block to add additional styles (i.e. <link/>) to
                  the <head> tag.
  block scripts - Override this block to add additional scripts (i.e. <script/>)
                  to the end of the <body> tag.
  block body    - Override this block to add content to the <body> tag.

  Required manifest files:
  - favicon.png
  - og-image.png
  - manifest.json
  - apple-touch-icon-180x180-precomposed.png
  - apple-touch-icon-152x152-precomposed.png
  - apple-touch-icon-144x144-precomposed.png
  - apple-touch-icon-120x120-precomposed.png
  - apple-touch-icon-114x114-precomposed.png
  - apple-touch-icon-76x76-precomposed.png
  - apple-touch-icon-72x72-precomposed.png
  - apple-touch-icon-60x60-precomposed.png
  - apple-touch-icon-57x57-precomposed.png
  - apple-touch-icon-precomposed.png
  - apple-touch-icon-144x144-precomposed.png
  - browserconfig.xml

//-
  Block for custom configuration. Append to this block to override any of the
  defaults.
block config
  -
    // Indicates whether NODE_ENV is `development`
    // @type {boolean}
    $debug = process.env.NODE_ENV === `development`

    // Override this to set the name of the entire app. This is used for mobile
    // devices and OpenGraph. Note that this is not the same as `$title`.
    // @type {string}
    // @required
    $appName = `UNTITLED`

    // Override this to set the title of the page (this is not the same as
    // `$appName`).
    // @type {string}
    // @required
    $title = `UNTITLED`

    // URL of this app, used for OpenGraph.
    // @type {string}
    // @optional
    $url = undefined

    // Content of the `viewport` meta tag. If evaluates to `false`, the meta tag
    // will not be included.
    // @type {string}
    // @optional
    $viewport = `width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no, viewport-fit=cover`

    // Content of the `viewport` meta tag. If evaluates to `false`, the meta tag
    // will not be included.
    // @type {string}
    // @optional
    $description = undefined

    // Content of the `viewport` meta tag. If evaluates to `false`, the meta tag
    // will not be included.
    // @type {string}
    // @optional
    $keywords = undefined

    // Google Analytics ID (i.e. UA-XXXXXXXX-1).
    // @type {string}
    // @optional
    $analytics = undefined

    // Typekit ID (i.e. abc1def).
    // @type {string}
    // @optional
    $typekit = undefined

    // List of body classes.
    // @type {string[]}
    // @optional
    $bodyClass = undefined

    // Function to load manifest files. By default it just returns the passed in
    // path prefixed with `/`.
    // @type {Function}
    // @optional
    $manifestPath = (path) => `/${path}`

//-
  Block for custom local variables.
block vars

doctype html

html
  head
    title= $title || $appName

    meta(charset=`utf-8`)
    meta(http-equiv=`X-UA-Compatible`, content=`IE=edge`)

    if $description
      meta(name=`description`, content=$description)

    if $keywords
      meta(name=`keywords`, content=$keywords)

    if $viewport
      meta(name=`viewport`, content=$viewport)

    link(rel=`icon`, href=$manifestPath(`favicon.png`))

    //- OpenGraph config
    meta(property=`og:image`, content=$manifestPath(`og-image.png`))
    meta(property=`og:title`, content=$appName)
    if $url
      meta(property=`og:url`, content=$url)
    if $description
      meta(property=`og:description`, content=$description)

    //- Android config
    //- See https://goo.gl/OOhYW5
    link(rel=``, href=$manifestPath(`manifest.json`))
    //- See https://goo.gl/qRE0vM
    meta(name=`mobile-web-app-capable`, content=`yes`)
    meta(name=`application-name`, content=$appName)

    //- iOS config
    meta(name=`apple-mobile-web-app-capable`, content=`yes`)
    meta(name=`apple-mobile-web-app-title`, content=$appName)
    link(rel=`apple-touch-icon`, href=$manifestPath(`apple-touch-icon-180x180-precomposed.png`), sizes=`180x180`)
    link(rel=`apple-touch-icon`, href=$manifestPath(`apple-touch-icon-152x152-precomposed.png`), sizes=`152x152`)
    link(rel=`apple-touch-icon`, href=$manifestPath(`apple-touch-icon-144x144-precomposed.png`), sizes=`144x144`)
    link(rel=`apple-touch-icon`, href=$manifestPath(`apple-touch-icon-120x120-precomposed.png`), sizes=`120x120`)
    link(rel=`apple-touch-icon`, href=$manifestPath(`apple-touch-icon-114x114-precomposed.png`), sizes=`114x114`)
    link(rel=`apple-touch-icon`, href=$manifestPath(`apple-touch-icon-76x76-precomposed.png`), sizes=`76x76`)
    link(rel=`apple-touch-icon`, href=$manifestPath(`apple-touch-icon-72x72-precomposed.png`), sizes=`72x72`)
    link(rel=`apple-touch-icon`, href=$manifestPath(`apple-touch-icon-60x60-precomposed.png`), sizes=`60x60`)
    link(rel=`apple-touch-icon`, href=$manifestPath(`apple-touch-icon-57x57-precomposed.png`), sizes=`57x57`)
    link(rel=`apple-touch-icon`, href=$manifestPath(`apple-touch-icon-precomposed.png`))

    //- Win 8 config
    meta(name=`msapplication-TileImage`, content=$manifestPath(`apple-touch-icon-144x144-precomposed.png`))
    meta(name=`msapplication-config`, content=$manifestPath(`browserconfig.xml`))

    block meta

    block styles

    if ($analytics)
      script(async src=`https://www.googletagmanager.com/gtag/js?id=${$analytics}`)
      script.
        window.dataLayer = window.dataLayer || [];
        function gtag(){dataLayer.push(arguments);}
        gtag('js', new Date());
        gtag('config', '#{$analytics}');

    if ($typekit)
      script(src=`https://use.typekit.net/${typekit}.js`)
      script.
        try{Typekit.load({ async: true });}catch(e){}

  body(class=($bodyClass && $bodyClass.join(` `)))
    block body

    block scripts
